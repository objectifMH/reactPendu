{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\gtu\\\\Documents\\\\fr.panda\\\\Front\\\\ReactPenduFinal\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\gtu\\\\Documents\\\\fr.panda\\\\Front\\\\ReactPenduFinal\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\gtu\\\\Documents\\\\fr.panda\\\\Front\\\\ReactPenduFinal\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\gtu\\\\Documents\\\\fr.panda\\\\Front\\\\ReactPenduFinal\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\gtu\\\\Documents\\\\fr.panda\\\\Front\\\\ReactPenduFinal\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\gtu\\\\Documents\\\\fr.panda\\\\Front\\\\ReactPenduFinal\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport Mot from \"./mot\";\nimport Alphabet from \"./alphabet\";\nvar tabMots = ['Apple', 'Banana', 'militante', 'Marcelo', \"psg\", \"matelo\", \"handball\", \"football\", \"ESPAgne\", \"Metallurgie\", \"Metamorphose\", \"Montgolfiere\", \"Kaleidoscope\", \"Conquistador\", \"Conspirateur\", \"Citrouille\", \"Controverse\", \"Coquelicot\", \"Dissimuler\", \"Flibustier\", \"Forestiere\", \"Grenouille\", \"Impossible\", \"Labyrinthe\", \"Maharadjah\"];\nvar leMot = \"\";\nvar tabSelect = [];\nvar leMotChech = \"\"; //function App() {\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    leMot = _this.recupereMot();\n    leMotChech = _this.initialiseLePendu();\n    _this.state = {\n      isTrouve: false,\n      leMotAChercher: leMotChech,\n      compteur: 0,\n      isSelectionner: [],\n      isGagne: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"initialiseLePendu\",\n    value: function initialiseLePendu() {\n      var res = \"\";\n\n      for (var i = 0; i < leMot.length; i++) {\n        res = '_' + res;\n      }\n\n      return res;\n    }\n  }, {\n    key: \"recupereMot\",\n    value: function recupereMot() {\n      return tabMots[Math.floor(Math.random() * tabMots.length)].toUpperCase();\n    }\n  }, {\n    key: \"remplace\",\n    value: function remplace(mot, char, ind) {\n      var res = \"\";\n\n      for (var i = 0; i < mot.length; i++) {\n        res = i === ind ? res + char : res + mot.charAt(i);\n      }\n\n      return res;\n    }\n  }, {\n    key: \"reinitialiser\",\n    value: function reinitialiser() {\n      //on pioche un nouveau mot au hasard dans le tableau \n      leMot = this.recupereMot();\n      leMotChech = this.initialiseLePendu(); //on remet notre tableau a 0\n\n      tabSelect.splice(0, tabSelect.length); //on fixe nos states aux valeurs initiales \n\n      this.setState({\n        isTrouve: false,\n        leMotAChercher: leMotChech,\n        compteur: 0,\n        isSelectionner: [],\n        isGagne: false\n      });\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(i) {\n      var _this2 = this;\n\n      //console.log(leMot+ \" \"  + i);\n      var res = this.state.leMotAChercher; //console.log(\"debut \" +this.state.isSelectionner+ \" \"+tabSelect);\n\n      if (leMot.includes(i)) {\n        for (var ind = 0; ind < leMot.length; ind++) {\n          if (leMot.charAt(ind) === i) {\n            res = this.remplace(res, i, ind);\n            console.log(\"dans le if \" + res);\n          }\n        }\n      }\n\n      var cmpt = this.state.compteur + 1;\n\n      if (!tabSelect.includes(i)) {\n        tabSelect.push(i);\n      }\n\n      this.setState({\n        leMotAChercher: res,\n        compteur: cmpt,\n        isSelectionner: tabSelect\n      }, //setState est asynchrone \n      function () {\n        console.log(_this2.state.isSelectionner + \" \" + cmpt + \" \" + _this2.state.compteur + \" \" + res + \" \" + _this2.state.leMotAChercher);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var winner = false;\n\n      if (this.state.leMotAChercher === leMot) {\n        winner = true; //alert(\"FÃ©licitations\");\n      }\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Nombre d'essai(s) : \", this.state.compteur), React.createElement(Mot, {\n        motRecherche: this.state.leMotAChercher,\n        winner: winner,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), !winner && React.createElement(Alphabet, {\n        motRecherche: leMot,\n        lettreSelectionne: this.state.isSelectionner,\n        gagne: this.state.isGagne,\n        onClick: function onClick(i) {\n          return _this3.handleClick(i);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), winner && React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this3.reinitialiser();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Recommencer\"));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nvar rootElement = document.getElementById(\"root\");\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 156\n  },\n  __self: this\n}), rootElement);","map":{"version":3,"sources":["C:/Users/gtu/Documents/fr.panda/Front/ReactPenduFinal/src/index.js"],"names":["React","ReactDOM","Mot","Alphabet","tabMots","leMot","tabSelect","leMotChech","App","props","recupereMot","initialiseLePendu","state","isTrouve","leMotAChercher","compteur","isSelectionner","isGagne","res","i","length","Math","floor","random","toUpperCase","mot","char","ind","charAt","splice","setState","includes","remplace","console","log","cmpt","push","winner","handleClick","reinitialiser","Component","rootElement","document","getElementById","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./styles.css\";\nimport Mot from \"./mot\";\nimport Alphabet from \"./alphabet\";\n\n\nvar tabMots = ['Apple', 'Banana','militante', 'Marcelo' ,\"psg\" , \"matelo\" , \"handball\" , \"football\" , \"ESPAgne\", \n\"Metallurgie\",\n\"Metamorphose\",\n\"Montgolfiere\",\n\"Kaleidoscope\",\n\"Conquistador\",\n\"Conspirateur\",\n\"Citrouille\",\n\"Controverse\",\n\"Coquelicot\",\n\"Dissimuler\",\n\"Flibustier\",\n\"Forestiere\",\n\"Grenouille\",\n\"Impossible\",\n\"Labyrinthe\",\n\"Maharadjah\"\n];\nvar leMot = \"\";\nconst tabSelect = [] ;\nvar leMotChech =\"\";\n\n//function App() {\n  class App extends React.Component {\n    constructor(props) {\n      super(props);\n\n      leMot = this.recupereMot();\n      leMotChech = this.initialiseLePendu();\n\n      this.state = { isTrouve: false ,\n      leMotAChercher: leMotChech ,\n      compteur: 0,\n      isSelectionner: [] , \n      isGagne: false, \n      };\n  }\n\n  initialiseLePendu() {\n      var res = \"\"; \n        for( let i=0 ; i<leMot.length ; i++)\n        {\n          res = '_' + res ;\n        }\n        return res;\n      }\n\n  recupereMot() {\n    return  tabMots[Math.floor( Math.random() * tabMots.length) ].toUpperCase() ;\n  }\n  \n  remplace(mot , char , ind) {\n    var res =\"\";\n    for ( let i=0 ; i < mot.length ; i++)\n    {\n     res = (i === ind) ? (res + char) : (res+mot.charAt(i));\n    }\n    return res; \n  }\n  \n  reinitialiser() {\n    //on pioche un nouveau mot au hasard dans le tableau \n    leMot= this.recupereMot();\n    leMotChech = this.initialiseLePendu();\n      \n    //on remet notre tableau a 0\n    tabSelect.splice(0,tabSelect.length)\n\n    //on fixe nos states aux valeurs initiales \n    this.setState({\n      isTrouve: false ,\n      leMotAChercher: leMotChech ,\n      compteur: 0,\n      isSelectionner: [] , \n      isGagne: false,  \n    });\n\n  }\n\n  handleClick(i) {\n    //console.log(leMot+ \" \"  + i);\n    var res = this.state.leMotAChercher;\n    //console.log(\"debut \" +this.state.isSelectionner+ \" \"+tabSelect);\n\n    if ( leMot.includes(i)){\n      for ( let ind=0 ; ind< leMot.length ; ind++)\n      {\n        if ( leMot.charAt(ind) === i )\n        {\n          res = this.remplace(res, i, ind);\n          console.log(\"dans le if \" + res);\n        }\n       }\n      }\n    var cmpt = this.state.compteur + 1 ; \n\n    if ( !tabSelect.includes(i))\n    {\n      tabSelect.push(i);\n    }\n      \n\n    this.setState({\n          leMotAChercher: res,\n          compteur: cmpt,\n          isSelectionner: tabSelect, \n        }, //setState est asynchrone \n          ()=>{\n            console.log( this.state.isSelectionner + \" \" +cmpt +\" \" + this.state.compteur + \" \"+ res + \" \"+this.state.leMotAChercher);\n          })\n    }\n\n  render(){\n\n    var winner = false ;\n    if ( this.state.leMotAChercher === leMot)\n          {\n            winner = true ;\n            \n            //alert(\"FÃ©licitations\");\n          }\n\n    return (\n      <div className=\"App\">\n        <p>Nombre d'essai(s) : {this.state.compteur}</p>\n        <Mot motRecherche={this.state.leMotAChercher} winner={winner} />\n        {\n            !winner && \n            <Alphabet  motRecherche={leMot}  lettreSelectionne={this.state.isSelectionner} \n            gagne={this.state.isGagne}\n            onClick={(i) => this.handleClick(i)}/>\n        } \n        {\n          winner && \n          <button onClick={() => this.reinitialiser()}>\n            Recommencer \n          </button>\n        }\n        \n      </div>\n    );\n    \n  }\n  \n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"]},"metadata":{},"sourceType":"module"}